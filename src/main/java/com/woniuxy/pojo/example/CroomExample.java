package com.woniuxy.pojo.example;

import java.util.ArrayList;
import java.util.List;

public class CroomExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public CroomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCroomIdIsNull() {
            addCriterion("croom_id is null");
            return (Criteria) this;
        }

        public Criteria andCroomIdIsNotNull() {
            addCriterion("croom_id is not null");
            return (Criteria) this;
        }

        public Criteria andCroomIdEqualTo(Integer value) {
            addCriterion("croom_id =", value, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdNotEqualTo(Integer value) {
            addCriterion("croom_id <>", value, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdGreaterThan(Integer value) {
            addCriterion("croom_id >", value, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("croom_id >=", value, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdLessThan(Integer value) {
            addCriterion("croom_id <", value, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdLessThanOrEqualTo(Integer value) {
            addCriterion("croom_id <=", value, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdIn(List<Integer> values) {
            addCriterion("croom_id in", values, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdNotIn(List<Integer> values) {
            addCriterion("croom_id not in", values, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdBetween(Integer value1, Integer value2) {
            addCriterion("croom_id between", value1, value2, "croomId");
            return (Criteria) this;
        }

        public Criteria andCroomIdNotBetween(Integer value1, Integer value2) {
            addCriterion("croom_id not between", value1, value2, "croomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdIsNull() {
            addCriterion("aroom_id is null");
            return (Criteria) this;
        }

        public Criteria andAroomIdIsNotNull() {
            addCriterion("aroom_id is not null");
            return (Criteria) this;
        }

        public Criteria andAroomIdEqualTo(Integer value) {
            addCriterion("aroom_id =", value, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdNotEqualTo(Integer value) {
            addCriterion("aroom_id <>", value, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdGreaterThan(Integer value) {
            addCriterion("aroom_id >", value, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("aroom_id >=", value, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdLessThan(Integer value) {
            addCriterion("aroom_id <", value, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdLessThanOrEqualTo(Integer value) {
            addCriterion("aroom_id <=", value, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdIn(List<Integer> values) {
            addCriterion("aroom_id in", values, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdNotIn(List<Integer> values) {
            addCriterion("aroom_id not in", values, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdBetween(Integer value1, Integer value2) {
            addCriterion("aroom_id between", value1, value2, "aroomId");
            return (Criteria) this;
        }

        public Criteria andAroomIdNotBetween(Integer value1, Integer value2) {
            addCriterion("aroom_id not between", value1, value2, "aroomId");
            return (Criteria) this;
        }

        public Criteria andCroomCodeIsNull() {
            addCriterion("croom_code is null");
            return (Criteria) this;
        }

        public Criteria andCroomCodeIsNotNull() {
            addCriterion("croom_code is not null");
            return (Criteria) this;
        }

        public Criteria andCroomCodeEqualTo(String value) {
            addCriterion("croom_code =", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeNotEqualTo(String value) {
            addCriterion("croom_code <>", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeGreaterThan(String value) {
            addCriterion("croom_code >", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeGreaterThanOrEqualTo(String value) {
            addCriterion("croom_code >=", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeLessThan(String value) {
            addCriterion("croom_code <", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeLessThanOrEqualTo(String value) {
            addCriterion("croom_code <=", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeLike(String value) {
            addCriterion("croom_code like", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeNotLike(String value) {
            addCriterion("croom_code not like", value, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeIn(List<String> values) {
            addCriterion("croom_code in", values, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeNotIn(List<String> values) {
            addCriterion("croom_code not in", values, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeBetween(String value1, String value2) {
            addCriterion("croom_code between", value1, value2, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomCodeNotBetween(String value1, String value2) {
            addCriterion("croom_code not between", value1, value2, "croomCode");
            return (Criteria) this;
        }

        public Criteria andCroomAddrIsNull() {
            addCriterion("croom_addr is null");
            return (Criteria) this;
        }

        public Criteria andCroomAddrIsNotNull() {
            addCriterion("croom_addr is not null");
            return (Criteria) this;
        }

        public Criteria andCroomAddrEqualTo(String value) {
            addCriterion("croom_addr =", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrNotEqualTo(String value) {
            addCriterion("croom_addr <>", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrGreaterThan(String value) {
            addCriterion("croom_addr >", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrGreaterThanOrEqualTo(String value) {
            addCriterion("croom_addr >=", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrLessThan(String value) {
            addCriterion("croom_addr <", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrLessThanOrEqualTo(String value) {
            addCriterion("croom_addr <=", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrLike(String value) {
            addCriterion("croom_addr like", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrNotLike(String value) {
            addCriterion("croom_addr not like", value, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrIn(List<String> values) {
            addCriterion("croom_addr in", values, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrNotIn(List<String> values) {
            addCriterion("croom_addr not in", values, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrBetween(String value1, String value2) {
            addCriterion("croom_addr between", value1, value2, "croomAddr");
            return (Criteria) this;
        }

        public Criteria andCroomAddrNotBetween(String value1, String value2) {
            addCriterion("croom_addr not between", value1, value2, "croomAddr");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table croom
     *
     * @mbggenerated do_not_delete_during_merge Thu Mar 26 16:26:36 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table croom
     *
     * @mbggenerated Thu Mar 26 16:26:36 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}